<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="14.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003" DefaultTargets="Build">
   <UsingTask TaskName="Microsoft.NuGet.Build.Tasks.ResolveNuGetPackageAssets" AssemblyFile="$(MSBuildExtensionsPath)\Microsoft\Nuget\Microsoft.NuGet.Build.Tasks.dll" />

  <PropertyGroup>
    <ProjectJson>$(MSBuildThisFileDirectory)project.json</ProjectJson>
    <ProjectLockJson>$(MSBuildThisFileDirectory)project.lock.json</ProjectLockJson>
    <PackagesDir>$(MSBuildThisFileDirectory)packages</PackagesDir>

    <TargetFrameworkMoniker>UAP,Version=v10.0</TargetFrameworkMoniker>
    <TargetArch Condition="'$(TargetArch)' == ''">x86</TargetArch>
    <TargetRuntimeIdentifier>win10-$(TargetArch)</TargetRuntimeIdentifier>
    <TargetRuntimeIdentifier Condition="'$(IsNetNative)' == 'true'">win10-$(TargetArch)-aot</TargetRuntimeIdentifier>
    <RestoredLibrariesPath>$(MSbuildThisFileDirectory)RestoredOutput\$(TargetRuntimeIdentifier)\</RestoredLibrariesPath>

    <NuGetToolPath Condition="'$(NuGetToolPath)'==''">$(MSBuildThisFileDirectory)\Bin\NuGet.exe</NuGetToolPath>
    <SymChkToolPath Condition="'$(SymChkToolPath)'=='' and Exists('C:\debuggers\symchk.exe')">C:\debuggers\symchk.exe</SymChkToolPath>
    <SymChkToolPath Condition="'$(SymChkToolPath)'==''">$(MSBuildThisFileDirectory)\Bin\symchk.exe</SymChkToolPath>

    <RestoredRefPath Condition="'$(TargetArch)'=='x86'">$(MSbuildThisFileDirectory)RestoredOutput\ref</RestoredRefPath>
  </PropertyGroup>

  <Target Name="RestoreLibraryPackages">
    <PropertyGroup>
      <NugetRestoreCommand>"$(NuGetToolPath)" restore</NugetRestoreCommand>
      <!-- NuGet.exe doesn't like trailing slashes in the output directory argument -->
      <NugetRestoreCommand>$(NugetRestoreCommand) -OutputDirectory "$(PackagesDir)"</NugetRestoreCommand>
      <NugetRestoreCommand>$(NugetRestoreCommand) -Verbosity detailed</NugetRestoreCommand>
    </PropertyGroup>

    <Exec Command="$(NugetRestoreCommand) $(ProjectJson)" />
  </Target>

  <Target Name="PublishLibraries">
    <ResolveNuGetPackageAssets
         IncludeFrameworkReferences="false"
         NuGetPackagesDirectory="$(PackagesDir)"
         RuntimeIdentifier="$(TargetRuntimeIdentifier)"
         ProjectLockFile="$(ProjectLockJson)"
         TargetMonikers="$(TargetFrameworkMoniker)">

      <Output TaskParameter="ResolvedCopyLocalItems" ItemName="ResolvedCopyLocalItems" />
      <Output TaskParameter="ResolvedReferences" ItemName="ResolvedReferences" />
    </ResolveNuGetPackageAssets>

    <!-- ResolvedCopyLocalItems corresponds to "runtime" and "native" files in the framework packages -->
    <Copy SourceFiles="@(ResolvedCopyLocalItems)" DestinationFolder="$(RestoredLibrariesPath)" />

    <!-- ResolvedReferences corresponds to library contracts -->
    <Copy SourceFiles="@(ResolvedReferences)" DestinationFolder="$(RestoredRefPath)" Condition="'$(RestoredRefPath)'!=''" />

  </Target>

  <Target Name="PublishSymbols" DependsOnTargets="PublishLibraries">
    <PropertyGroup>
      <SymbolPath>srv*D:\SymbolCache\*http://symweb</SymbolPath>
      <!-- We use the SymChk tool to restore symbols from a symbol server for restored libraries -->
      <SymChkCommand>$(SymChkToolPath)</SymChkCommand>
      <SymChkCommand>$(SymChkCommand) /s $(SymbolPath)</SymChkCommand>
      <SymChkCommand>$(SymChkCommand) /v $(SymbolPath)</SymChkCommand>
      <SymChkCommand>$(SymChkCommand) /oc $(RestoredLibrariesPath)</SymChkCommand>
      <SymChkCommand>$(SymChkCommand) /if $(RestoredLibrariesPath)*.dll</SymChkCommand>
    </PropertyGroup>

    <Exec Command="$(SymChkCommand)" />
  </Target>

  <Target Name="Build" DependsOnTargets="RestoreLibraryPackages;PublishLibraries;PublishSymbols" />

</Project>